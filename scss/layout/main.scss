/** Extended Bulma Variables **/
$spacer: 1rem !default;
$spacer-x: 1rem !default;
$spacer-y: 1rem !default;

$main-spacer-x: $spacer-x !default;
$main-spacer-y: $spacer-y !default;

$main-breakpoint: $tablet !default;

$main-container-padding-top: $spacer-y !default;
$main-container-padding-bottom: $spacer-y !default;

$main-sidebar-left-width: 300px;
$main-sidebar-right-width: 300px;

.main {
  flex-grow: 1000;
}

.main-container {
  padding-top: $main-container-padding-top;
  padding-bottom: $main-container-padding-bottom;
  display: grid;
  height: 100%;
  grid-column-gap: $main-spacer-x; // it's done by sidebar margin for now, maybe remove later
  grid-row-gap: $main-spacer-y;
  grid-template-rows: minmax(0, 1fr);
  justify-content: center;

  grid-template-columns: 100%;

  @include until($desktop) {
    padding-left: $spacer-x;
    padding-right: $spacer-x;
  }

  grid-template-areas:
    "content"
    "sidebar-left"
    "sidebar-right"
  ;

  .body.is-sidebar-left & {
    grid-template-rows: minmax(0, 1fr);

    @include from($main-breakpoint) {
      grid-template-columns: [sidebar-left] $main-sidebar-left-width [content] minmax(0, 1fr);
      grid-template-areas:
        "sidebar-left content"
        "sidebar-right content"
      ;
    }
  }

  .body.is-sidebar-right & {
    @include from($main-breakpoint) {
      grid-template-columns: [content] minmax(0, 1fr) [sidebar-right] $main-sidebar-right-width;
      grid-template-areas:
        "content sidebar-right"
        "content sidebar-left"
      ;
    }
  }
  .body.is-sidebar-left.body.is-sidebar-right & {
    @include from($main-breakpoint) {
      grid-template-columns: [sidebar-left] $main-sidebar-left-width [content] minmax(0, 1fr) [sidebar-right] $main-sidebar-right-width;
      grid-template-areas:
        "sidebar-left content sidebar-right"
      ;
    }
  }
}


.main-content {
  grid-area: content;
}

.main-sidebar {

  &.is-left {
    grid-area: sidebar-left;
  }

  &.is-right {
    grid-area: sidebar-right;
  }
}
